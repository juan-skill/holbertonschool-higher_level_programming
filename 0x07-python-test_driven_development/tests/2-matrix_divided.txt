The ``matrix_divided`` module
======================

Import module
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


typical correct cases:

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

>>> matrix_divided(matrix, -2)
[[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

>>> matrix_divided(matrix, 2.5)
[[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]

>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided(matrix, True)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

>>> matrix = [[1, 2, 3]]
>>> matrix_divided(matrix, 1)
[[1.0, 2.0, 3.0]]


Incorrect cases:

>>> matrix_divided(matrix, None)
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided(matrix, False)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix = []
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, "fsfd", 'a'], ["mouse", 5, 6]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = None
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
